494. Target Sum   //https://leetcode.com/contest/leetcode-weekly-contest-16a/problems/target-sum/

You are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols + and -. For each integer, you should choose one from + and - as its new symbol.

Find out how many ways to assign symbols to make sum of integers equal to target S.

Example 1:
Input: nums is [1, 1, 1, 1, 1], S is 3. 
Output: 5
Explanation: 

-1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3

There are 5 ways to assign symbols to make the sum of nums be target 3.
Note:
The length of the given array is positive and will not exceed 20.
The sum of elements in the given array will not exceed 1000.
Your output answer is guaranteed to be fitted in a 32-bit integer.

class Solution(object):
    def findTargetSumWays(self, nums, S):
        """
        :type nums: List[int]
        :type S: int
        :rtype: int
        """
        dic = {nums[0]:1, -nums[0]:1} if nums[0]!=0 else {0:2}
        for i in range(1,len(nums)):
            tdic = {}
            for val in dic:
                tdic[val + nums[i]] = tdic.get(val + nums[i],0) + dic.get(val,0)
                tdic[val - nums[i]] = tdic.get(val - nums[i],0) + dic.get(val,0)
            dic = tdic
        return dic.get(S,0)
        
 暴力法是明显不可能的。这其实是一道DP题，明显的用空间换时间，满足1.最优子结构性质，2.无后向性，
 3.子问题的重叠性（很明显，想暴力的时候确实有很多情况是重复的）
 
